//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EDPHeaven.MyDBServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/EDPWcf")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Outlet", Namespace="http://schemas.datacontract.org/2004/07/EDPWcf.Entity")]
    [System.SerializableAttribute()]
    public partial class Outlet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutletDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutletEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutletImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutletNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutletDescription {
            get {
                return this.OutletDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OutletDescriptionField, value) != true)) {
                    this.OutletDescriptionField = value;
                    this.RaisePropertyChanged("OutletDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutletEmail {
            get {
                return this.OutletEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.OutletEmailField, value) != true)) {
                    this.OutletEmailField = value;
                    this.RaisePropertyChanged("OutletEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutletImg {
            get {
                return this.OutletImgField;
            }
            set {
                if ((object.ReferenceEquals(this.OutletImgField, value) != true)) {
                    this.OutletImgField = value;
                    this.RaisePropertyChanged("OutletImg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutletName {
            get {
                return this.OutletNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OutletNameField, value) != true)) {
                    this.OutletNameField = value;
                    this.RaisePropertyChanged("OutletName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutletItem", Namespace="http://schemas.datacontract.org/2004/07/EDPWcf.Entity")]
    [System.SerializableAttribute()]
    public partial class OutletItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRecommendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemOutletIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ItemPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRecommend {
            get {
                return this.IsRecommendField;
            }
            set {
                if ((this.IsRecommendField.Equals(value) != true)) {
                    this.IsRecommendField = value;
                    this.RaisePropertyChanged("IsRecommend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDesc {
            get {
                return this.ItemDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescField, value) != true)) {
                    this.ItemDescField = value;
                    this.RaisePropertyChanged("ItemDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemOutletId {
            get {
                return this.ItemOutletIdField;
            }
            set {
                if ((this.ItemOutletIdField.Equals(value) != true)) {
                    this.ItemOutletIdField = value;
                    this.RaisePropertyChanged("ItemOutletId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ItemPrice {
            get {
                return this.ItemPriceField;
            }
            set {
                if ((this.ItemPriceField.Equals(value) != true)) {
                    this.ItemPriceField = value;
                    this.RaisePropertyChanged("ItemPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyDBServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        EDPHeaven.MyDBServiceReference.CompositeType GetDataUsingDataContract(EDPHeaven.MyDBServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<EDPHeaven.MyDBServiceReference.CompositeType> GetDataUsingDataContractAsync(EDPHeaven.MyDBServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SignUp", ReplyAction="http://tempuri.org/IService1/SignUpResponse")]
        int SignUp(string Name, string Password, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SignUp", ReplyAction="http://tempuri.org/IService1/SignUpResponse")]
        System.Threading.Tasks.Task<int> SignUpAsync(string Name, string Password, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateLogin", ReplyAction="http://tempuri.org/IService1/ValidateLoginResponse")]
        bool ValidateLogin(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateLogin", ReplyAction="http://tempuri.org/IService1/ValidateLoginResponse")]
        System.Threading.Tasks.Task<bool> ValidateLoginAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateRoom", ReplyAction="http://tempuri.org/IService1/CreateRoomResponse")]
        int CreateRoom(string id, string password, string host);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateRoom", ReplyAction="http://tempuri.org/IService1/CreateRoomResponse")]
        System.Threading.Tasks.Task<int> CreateRoomAsync(string id, string password, string host);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Validate", ReplyAction="http://tempuri.org/IService1/ValidateResponse")]
        int Validate(string JRoomID, string JRoomPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Validate", ReplyAction="http://tempuri.org/IService1/ValidateResponse")]
        System.Threading.Tasks.Task<int> ValidateAsync(string JRoomID, string JRoomPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateRoomID", ReplyAction="http://tempuri.org/IService1/ValidateRoomIDResponse")]
        int ValidateRoomID(string RoomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateRoomID", ReplyAction="http://tempuri.org/IService1/ValidateRoomIDResponse")]
        System.Threading.Tasks.Task<int> ValidateRoomIDAsync(string RoomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Room_Password", ReplyAction="http://tempuri.org/IService1/Get_Room_PasswordResponse")]
        string Get_Room_Password(string RoomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Get_Room_Password", ReplyAction="http://tempuri.org/IService1/Get_Room_PasswordResponse")]
        System.Threading.Tasks.Task<string> Get_Room_PasswordAsync(string RoomID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItems", ReplyAction="http://tempuri.org/IService1/GetItemsResponse")]
        string[][] GetItems(int outletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItems", ReplyAction="http://tempuri.org/IService1/GetItemsResponse")]
        System.Threading.Tasks.Task<string[][]> GetItemsAsync(int outletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOutletName", ReplyAction="http://tempuri.org/IService1/GetOutletNameResponse")]
        string GetOutletName(int outletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOutletName", ReplyAction="http://tempuri.org/IService1/GetOutletNameResponse")]
        System.Threading.Tasks.Task<string> GetOutletNameAsync(int outletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOutletDesc", ReplyAction="http://tempuri.org/IService1/GetOutletDescResponse")]
        string GetOutletDesc(int outletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOutletDesc", ReplyAction="http://tempuri.org/IService1/GetOutletDescResponse")]
        System.Threading.Tasks.Task<string> GetOutletDescAsync(int outletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOutlets", ReplyAction="http://tempuri.org/IService1/GetOutletsResponse")]
        EDPHeaven.MyDBServiceReference.Outlet[] GetOutlets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOutlets", ReplyAction="http://tempuri.org/IService1/GetOutletsResponse")]
        System.Threading.Tasks.Task<EDPHeaven.MyDBServiceReference.Outlet[]> GetOutletsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateOrder", ReplyAction="http://tempuri.org/IService1/CreateOrderResponse")]
        int CreateOrder(string email, string contactNum, string deliverAdd, string cardNum, string secNum, string cardExp, byte[] ki, byte[] iv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateOrder", ReplyAction="http://tempuri.org/IService1/CreateOrderResponse")]
        System.Threading.Tasks.Task<int> CreateOrderAsync(string email, string contactNum, string deliverAdd, string cardNum, string secNum, string cardExp, byte[] ki, byte[] iv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItemList", ReplyAction="http://tempuri.org/IService1/GetItemListResponse")]
        EDPHeaven.MyDBServiceReference.OutletItem[] GetItemList(int outletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItemList", ReplyAction="http://tempuri.org/IService1/GetItemListResponse")]
        System.Threading.Tasks.Task<EDPHeaven.MyDBServiceReference.OutletItem[]> GetItemListAsync(int outletId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMenuItem", ReplyAction="http://tempuri.org/IService1/AddMenuItemResponse")]
        int AddMenuItem(int outletId, string itemName, double itemPrice, string itemDesc, bool isRecommend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddMenuItem", ReplyAction="http://tempuri.org/IService1/AddMenuItemResponse")]
        System.Threading.Tasks.Task<int> AddMenuItemAsync(int outletId, string itemName, double itemPrice, string itemDesc, bool isRecommend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectItem", ReplyAction="http://tempuri.org/IService1/SelectItemResponse")]
        string[] SelectItem(int ItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectItem", ReplyAction="http://tempuri.org/IService1/SelectItemResponse")]
        System.Threading.Tasks.Task<string[]> SelectItemAsync(int ItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateItem", ReplyAction="http://tempuri.org/IService1/UpdateItemResponse")]
        int UpdateItem(int ItemId, string itemName, double itemPrice, string itemDesc, bool isRecommend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateItem", ReplyAction="http://tempuri.org/IService1/UpdateItemResponse")]
        System.Threading.Tasks.Task<int> UpdateItemAsync(int ItemId, string itemName, double itemPrice, string itemDesc, bool isRecommend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateUser", ReplyAction="http://tempuri.org/IService1/ValidateUserResponse")]
        bool ValidateUser(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateUser", ReplyAction="http://tempuri.org/IService1/ValidateUserResponse")]
        System.Threading.Tasks.Task<bool> ValidateUserAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : EDPHeaven.MyDBServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<EDPHeaven.MyDBServiceReference.IService1>, EDPHeaven.MyDBServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public EDPHeaven.MyDBServiceReference.CompositeType GetDataUsingDataContract(EDPHeaven.MyDBServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<EDPHeaven.MyDBServiceReference.CompositeType> GetDataUsingDataContractAsync(EDPHeaven.MyDBServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public int SignUp(string Name, string Password, string Email) {
            return base.Channel.SignUp(Name, Password, Email);
        }
        
        public System.Threading.Tasks.Task<int> SignUpAsync(string Name, string Password, string Email) {
            return base.Channel.SignUpAsync(Name, Password, Email);
        }
        
        public bool ValidateLogin(string Email, string Password) {
            return base.Channel.ValidateLogin(Email, Password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateLoginAsync(string Email, string Password) {
            return base.Channel.ValidateLoginAsync(Email, Password);
        }
        
        public int CreateRoom(string id, string password, string host) {
            return base.Channel.CreateRoom(id, password, host);
        }
        
        public System.Threading.Tasks.Task<int> CreateRoomAsync(string id, string password, string host) {
            return base.Channel.CreateRoomAsync(id, password, host);
        }
        
        public int Validate(string JRoomID, string JRoomPassword) {
            return base.Channel.Validate(JRoomID, JRoomPassword);
        }
        
        public System.Threading.Tasks.Task<int> ValidateAsync(string JRoomID, string JRoomPassword) {
            return base.Channel.ValidateAsync(JRoomID, JRoomPassword);
        }
        
        public int ValidateRoomID(string RoomID) {
            return base.Channel.ValidateRoomID(RoomID);
        }
        
        public System.Threading.Tasks.Task<int> ValidateRoomIDAsync(string RoomID) {
            return base.Channel.ValidateRoomIDAsync(RoomID);
        }
        
        public string Get_Room_Password(string RoomID) {
            return base.Channel.Get_Room_Password(RoomID);
        }
        
        public System.Threading.Tasks.Task<string> Get_Room_PasswordAsync(string RoomID) {
            return base.Channel.Get_Room_PasswordAsync(RoomID);
        }
        
        public string[][] GetItems(int outletId) {
            return base.Channel.GetItems(outletId);
        }
        
        public System.Threading.Tasks.Task<string[][]> GetItemsAsync(int outletId) {
            return base.Channel.GetItemsAsync(outletId);
        }
        
        public string GetOutletName(int outletId) {
            return base.Channel.GetOutletName(outletId);
        }
        
        public System.Threading.Tasks.Task<string> GetOutletNameAsync(int outletId) {
            return base.Channel.GetOutletNameAsync(outletId);
        }
        
        public string GetOutletDesc(int outletId) {
            return base.Channel.GetOutletDesc(outletId);
        }
        
        public System.Threading.Tasks.Task<string> GetOutletDescAsync(int outletId) {
            return base.Channel.GetOutletDescAsync(outletId);
        }
        
        public EDPHeaven.MyDBServiceReference.Outlet[] GetOutlets() {
            return base.Channel.GetOutlets();
        }
        
        public System.Threading.Tasks.Task<EDPHeaven.MyDBServiceReference.Outlet[]> GetOutletsAsync() {
            return base.Channel.GetOutletsAsync();
        }
        
        public int CreateOrder(string email, string contactNum, string deliverAdd, string cardNum, string secNum, string cardExp, byte[] ki, byte[] iv) {
            return base.Channel.CreateOrder(email, contactNum, deliverAdd, cardNum, secNum, cardExp, ki, iv);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrderAsync(string email, string contactNum, string deliverAdd, string cardNum, string secNum, string cardExp, byte[] ki, byte[] iv) {
            return base.Channel.CreateOrderAsync(email, contactNum, deliverAdd, cardNum, secNum, cardExp, ki, iv);
        }
        
        public EDPHeaven.MyDBServiceReference.OutletItem[] GetItemList(int outletId) {
            return base.Channel.GetItemList(outletId);
        }
        
        public System.Threading.Tasks.Task<EDPHeaven.MyDBServiceReference.OutletItem[]> GetItemListAsync(int outletId) {
            return base.Channel.GetItemListAsync(outletId);
        }
        
        public int AddMenuItem(int outletId, string itemName, double itemPrice, string itemDesc, bool isRecommend) {
            return base.Channel.AddMenuItem(outletId, itemName, itemPrice, itemDesc, isRecommend);
        }
        
        public System.Threading.Tasks.Task<int> AddMenuItemAsync(int outletId, string itemName, double itemPrice, string itemDesc, bool isRecommend) {
            return base.Channel.AddMenuItemAsync(outletId, itemName, itemPrice, itemDesc, isRecommend);
        }
        
        public string[] SelectItem(int ItemId) {
            return base.Channel.SelectItem(ItemId);
        }
        
        public System.Threading.Tasks.Task<string[]> SelectItemAsync(int ItemId) {
            return base.Channel.SelectItemAsync(ItemId);
        }
        
        public int UpdateItem(int ItemId, string itemName, double itemPrice, string itemDesc, bool isRecommend) {
            return base.Channel.UpdateItem(ItemId, itemName, itemPrice, itemDesc, isRecommend);
        }
        
        public System.Threading.Tasks.Task<int> UpdateItemAsync(int ItemId, string itemName, double itemPrice, string itemDesc, bool isRecommend) {
            return base.Channel.UpdateItemAsync(ItemId, itemName, itemPrice, itemDesc, isRecommend);
        }
        
        public bool ValidateUser(string email) {
            return base.Channel.ValidateUser(email);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserAsync(string email) {
            return base.Channel.ValidateUserAsync(email);
        }
    }
}
